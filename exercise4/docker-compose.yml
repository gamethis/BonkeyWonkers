services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.cpu.info.flags-include=True'
    ports:
      - 9100:9100

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    expose:
      - 9090

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8081:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true
    depends_on:
    - redis

  redis:
    image: redis:latest
    container_name: redis
    ports:
    - 6379:6379

  grafana:
    image: grafana/grafana-enterprise:latest
    ports:
    - 3000:3000
    environment:
     - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana.ini:/etc/grafana/grafana.ini

  vault:
    image: hashicorp/vault:latest
    container_name: Vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: testtoken
    ports:
      - 8200:8200
    privileged: true

  # https://github.com/linuxserver/docker-wireshark
  wireshark:
    image: lscr.io/linuxserver/wireshark:latest
    container_name: wireshark
    cap_add:
      - NET_ADMIN
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /path/to/config:/config
    ports:
      - 3002:3000 #optional
    restart: unless-stopped
  registry:
    image: registry:2
    container_name: registry
    ports:
      - 5000:5000
    restart: always
